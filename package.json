{
  "name": "shashkiback",
  "version": "0.0.0",
  "private": true,
  "config": {
    "s3BucketName": "mysandboxbucket-2017-1",
    "region": "eu-central-1",
    "cloudFormationStackName": "AwsServerlessExpressStack",
    "functionName": "AwsServerlessExpressFunction",
    "accountId": "089753065094"
  },
  "scripts": {
    "start": "./node_modules/.bin/cross-env NODE_ENV=development ./node_modules/.bin/nodemon ./bin/www",
    "debug": "./node_modules/.bin/cross-env NODE_ENV=development ./node_modules/.bin/nodemon --inspect -e ts ./bin/www",
    "test": "mocha -R spec test/*",
    "grunt": "grunt watch",
    "sls-deploy": "sls deploy -v",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "local": "node scripts/local",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "win-config": "npm run config",
    "win-deconfig": "npm run deconfig",
    "win-local": "npm run local",
    "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
    "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region%",
    "win-package-deploy": "npm run win-package && npm run win-deploy",
    "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
    "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
  },
  "dependencies": {
    "@types/bcryptjs": "^2.4.0",
    "@types/helmet": "0.0.35",
    "@types/inversify-binding-decorators": "^2.0.0",
    "@types/inversify-logger-middleware": "^2.0.0",
    "@types/jsonwebtoken": "^7.2.0",
    "@types/mongoose": "^4.7.13",
    "@types/nconf": "0.0.34",
    "@types/passport": "^0.3.3",
    "@types/passport-facebook": "^2.1.4",
    "@types/passport-jwt": "^2.0.19",
    "@types/restify": "^4.3.2",
    "@types/uuid": "^2.0.29",
    "aws-sdk": "^2.58.0",
    "aws-serverless-express": "^3.0.1",
    "bcryptjs": "^2.4.3",
    "helmet": "^3.6.1",
    "http-status-enum": "^1.0.2",
    "inversify": "^4.1.0",
    "inversify-binding-decorators": "^3.0.0",
    "inversify-logger-middleware": "^3.0.0",
    "inversify-restify-utils": "^3.2.0",
    "jsonwebtoken": "^8.0.0",
    "mongoose": "^4.10.1",
    "mongoose-type-email": "^1.0.5",
    "mongoose-unique-validator": "^1.0.5",
    "nconf": "^0.8.4",
    "nodemon": "^1.11.0",
    "passport": "^0.3.2",
    "passport-cognito": "^0.1.9",
    "passport-facebook": "^2.1.1",
    "passport-jwt": "^2.2.1",
    "reflect-metadata": "^0.1.10",
    "restify": "^4.3.0",
    "serverless-dynamodb-local": "^0.2.22",
    "uuid": "^3.0.1"
  },
  "devDependencies": {}
}
